<?php

namespace aminkt\shop\controllers;

use aminkt\shop\Shop;
use yii\data\ActiveDataProvider;
use yii\web\Controller;
use yii\web\NotFoundHttpException;

/**
 * Shop controller for the `Shop` module
 */
class ShopController extends Controller
{

    public function beforeAction($action)
    {
        $this->renderPartial('/template_helpers/helper.php');
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Renders the index view for the module.
     * @return string
     */
    public function actionIndex()
    {
        return $this->render('index');
    }


    /**
     * Render the category page of shop module.
     * @param string $id Category id
     * @param null|string $slug
     * @return string
     * @throws NotFoundHttpException
     */
    public function actionCategory($id, $slug=null){
        $categoryModel = Shop::getInstance()->categoryModel;
        $category = $categoryModel::getCategoryById($id);
        if(!$category)
            throw new NotFoundHttpException("دسته مورد نظر یافت نشد");
        if(!$slug or $slug!=$category->getSlug())
            return $this->redirect(['category', 'id'=>$id, 'slug'=>$category->getSlug()]);

        $productsQuery = $category->getCategoryProductsQuery();
        $dataProvider = new ActiveDataProvider([
            'query'=>$productsQuery
        ]);
        return $this->render('category', [
            'category'=>$category,
            'products'=>$dataProvider->models,
            'dataProvider'=>$dataProvider
        ]);
    }


    /**
     * Render the product page of shop module.
     * @param string $id Product code
     * @param null|string $slug
     * @return string
     * @throws NotFoundHttpException
     */
    public function actionProduct($id, $slug=null){
        $productModel = Shop::getInstance()->productModel;
        $product = $productModel::getProductById($id);
        if(!$product)
            throw new NotFoundHttpException("محصول مورد نظر یافت نشد");
        if(!$slug or $slug!=$product->getSlug())
            return $this->redirect(['product', 'id'=>$id, 'slug'=>$product->getSlug()]);

        return $this->render('product', [
            'product'=>$product
        ]);
    }


    /**
     * Render the search page of shop module.
     * @return string
     */
    public function actionSearch(){
        return $this->render('search');
    }
}
